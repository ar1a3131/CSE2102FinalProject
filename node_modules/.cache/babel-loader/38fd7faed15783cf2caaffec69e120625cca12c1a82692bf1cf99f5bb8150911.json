{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nini5\\\\cse2102finalproject\\\\final\\\\src\\\\components\\\\quiz\\\\Result.js\";\nimport React from 'react';\nimport './QuizStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Result = ({\n  answers,\n  questions,\n  onReset\n}) => {\n  // Calculate the total score\n  const totalScore = answers.reduce((score, answer, index) => {\n    return answer === questions[index].correctAnswer ? score + 1 : score;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/panjshir.jpg)`\n    },\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: \"Quiz Results\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"result-summary\",\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Total Score: \", totalScore, \"/\", questions.length]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"navigation-buttons\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: onReset,\n          children: \"Try again\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n_c = Result;\nexport default Result;\n\n/*\nconst Result = ({ answers, questions, onReset }) => {\n  // Calculate the total score\n  const totalScore = answers.reduce((score, answer, index) => {\n    if (answer === questions[index].correctAnswer) {\n      return score + 1;\n    }\n    return score;\n  }, 0);\n\n  return (\n    <div className=\"page-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/quizBack.jpg)` }}>\n      <div className=\"quiz-container\">\n        <div className=\"question-text\">Quiz Results</div>\n        <div className=\"result-details\">\n          <div className=\"result-summary\">\n            <p>Total Score: {totalScore}/{questions.length}</p>\n          </div>\n          {questions.map((question, index) => (\n            <div key={index} className={`option ${answers[index] === question.correctAnswer ? 'correct' : 'incorrect'}`}>\n              <p>Question {index + 1}: {question.questionText}</p>\n              <p>Your answer: {answers[index]}</p>\n              <p>Correct answer: {question.correctAnswer}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"navigation-buttons\">\n          <button onClick={onReset}>Try again</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n\n*/\nvar _c;\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Result","answers","questions","onReset","totalScore","reduce","score","answer","index","correctAnswer","className","style","backgroundImage","process","env","PUBLIC_URL","children","fileName","_jsxFileName","lineNumber","columnNumber","length","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nini5/cse2102finalproject/final/src/components/quiz/Result.js"],"sourcesContent":["import React from 'react';\nimport './QuizStyle.css';\n\n\nconst Result = ({ answers, questions, onReset }) => {\n  // Calculate the total score\n  const totalScore = answers.reduce((score, answer, index) => {\n    return answer === questions[index].correctAnswer ? score + 1 : score;\n  }, 0);\n\n  return (\n    <div className=\"page-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/panjshir.jpg)` }}>\n      <div className=\"quiz-container\">\n        <div className=\"question-text\">Quiz Results</div>\n        <div className=\"result-summary\">\n          <p>Total Score: {totalScore}/{questions.length}</p>\n        </div>\n        <div className=\"navigation-buttons\">\n          <button onClick={onReset}>Try again</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n\n\n\n\n\n/*\nconst Result = ({ answers, questions, onReset }) => {\n  // Calculate the total score\n  const totalScore = answers.reduce((score, answer, index) => {\n    if (answer === questions[index].correctAnswer) {\n      return score + 1;\n    }\n    return score;\n  }, 0);\n\n  return (\n    <div className=\"page-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/quizBack.jpg)` }}>\n      <div className=\"quiz-container\">\n        <div className=\"question-text\">Quiz Results</div>\n        <div className=\"result-details\">\n          <div className=\"result-summary\">\n            <p>Total Score: {totalScore}/{questions.length}</p>\n          </div>\n          {questions.map((question, index) => (\n            <div key={index} className={`option ${answers[index] === question.correctAnswer ? 'correct' : 'incorrect'}`}>\n              <p>Question {index + 1}: {question.questionText}</p>\n              <p>Your answer: {answers[index]}</p>\n              <p>Correct answer: {question.correctAnswer}</p>\n            </div>\n          ))}\n        </div>\n        <div className=\"navigation-buttons\">\n          <button onClick={onReset}>Try again</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Result;\n\n*/\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAGzB,MAAMC,MAAM,GAAGA,CAAC;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAAQ,CAAC,KAAK;EAClD;EACA,MAAMC,UAAU,GAAGH,OAAO,CAACI,MAAM,CAAC,CAACC,KAAK,EAAEC,MAAM,EAAEC,KAAK,KAAK;IAC1D,OAAOD,MAAM,KAAKL,SAAS,CAACM,KAAK,CAAC,CAACC,aAAa,GAAGH,KAAK,GAAG,CAAC,GAAGA,KAAK;EACtE,CAAC,EAAE,CAAC,CAAC;EAEL,oBACEP,OAAA;IAAKW,SAAS,EAAC,gBAAgB;IAACC,KAAK,EAAE;MAAEC,eAAe,EAAG,OAAMC,OAAO,CAACC,GAAG,CAACC,UAAW;IAAgB,CAAE;IAAAC,QAAA,eACxGjB,OAAA;MAAKW,SAAS,EAAC,gBAAgB;MAAAM,QAAA,gBAC7BjB,OAAA;QAAKW,SAAS,EAAC,eAAe;QAAAM,QAAA,EAAC;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACjDrB,OAAA;QAAKW,SAAS,EAAC,gBAAgB;QAAAM,QAAA,eAC7BjB,OAAA;UAAAiB,QAAA,GAAG,eAAa,EAACZ,UAAU,EAAC,GAAC,EAACF,SAAS,CAACmB,MAAM;QAAA;UAAAJ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChD,CAAC,eACNrB,OAAA;QAAKW,SAAS,EAAC,oBAAoB;QAAAM,QAAA,eACjCjB,OAAA;UAAQuB,OAAO,EAAEnB,OAAQ;UAAAa,QAAA,EAAC;QAAS;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACG,EAAA,GAnBIvB,MAAM;AAqBZ,eAAeA,MAAM;;AAMrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AApCA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}