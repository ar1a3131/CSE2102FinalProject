{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nini5\\\\cse2102finalproject\\\\final\\\\src\\\\components\\\\quiz\\\\QuizContainer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport getQuestionsForTopic from './Question';\nimport Result from './Result';\nimport './QuizStyle.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QuizContainer = ({\n  topic\n}) => {\n  _s();\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [answers, setAnswers] = useState(Array(5).fill(null));\n  const [showResult, setShowResult] = useState(false);\n  const questions = getQuestionsForTopic(topic);\n  const navigate = useNavigate();\n  const handleOptionSelect = option => {\n    const newAnswers = [...answers];\n    newAnswers[currentQuestionIndex] = option;\n    setAnswers(newAnswers);\n    handleNextQuestion();\n  };\n  const handleReset = () => {\n    setAnswers(Array(5).fill(null));\n    setCurrentQuestionIndex(0);\n    setShowResult(false);\n    navigate('/topic-selection');\n  };\n  const handleNextQuestion = () => {\n    if (currentQuestionIndex < questions.length - 1) {\n      setCurrentQuestionIndex(currentQuestionIndex + 1);\n    } else {\n      setShowResult(true); // No more questions left, show the result\n    }\n  };\n  if (showResult) {\n    return /*#__PURE__*/_jsxDEV(Result, {\n      answers: answers,\n      questions: questions,\n      onReset: handleReset\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (!questions.length) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"No questions available.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 35\n  }, this);\n  const currentQuestion = questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    style: {\n      backgroundImage: `url(${process.env.PUBLIC_URL}/panjshir.jpg)`\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"quiz-container\",\n      children: [\"Question \", currentQuestionIndex + 1, \"/\", questions.length, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"question-text\",\n        children: currentQuestion.questionText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"options-container\",\n      children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleOptionSelect(option),\n        className: `option ${answers[currentQuestionIndex] === option ? 'selected' : ''}`,\n        children: option\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navigation-buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleNextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n};\n_s(QuizContainer, \"HxWm1M2GKtSwuM6qVpjrxKauWtI=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizContainer;\nexport default QuizContainer;\nvar _c;\n$RefreshReg$(_c, \"QuizContainer\");","map":{"version":3,"names":["React","useState","useNavigate","getQuestionsForTopic","Result","jsxDEV","_jsxDEV","QuizContainer","topic","_s","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","Array","fill","showResult","setShowResult","questions","navigate","handleOptionSelect","option","newAnswers","handleNextQuestion","handleReset","length","onReset","fileName","_jsxFileName","lineNumber","columnNumber","children","currentQuestion","className","style","backgroundImage","process","env","PUBLIC_URL","questionText","options","map","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/nini5/cse2102finalproject/final/src/components/quiz/QuizContainer.js"],"sourcesContent":["import React, { useState} from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport getQuestionsForTopic from './Question';\nimport Result from './Result';\n\nimport './QuizStyle.css'; \n\nconst QuizContainer = ({ topic }) => {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [answers, setAnswers] = useState(Array(5).fill(null));\n    const [showResult, setShowResult] = useState(false);\n    const questions = getQuestionsForTopic(topic);\n    const navigate = useNavigate();\n\n    const handleOptionSelect = (option) => {\n        const newAnswers = [...answers];\n        newAnswers[currentQuestionIndex] = option;\n        setAnswers(newAnswers);\n\n        handleNextQuestion();\n    };\n\n    const handleReset = () => {\n        setAnswers(Array(5).fill(null));\n        setCurrentQuestionIndex(0);\n        setShowResult(false);\n\n        navigate('/topic-selection');\n    };\n\n    const handleNextQuestion = () => {\n        if (currentQuestionIndex < questions.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n    \n        } else {\n            setShowResult(true); // No more questions left, show the result\n        }\n    };\n\n    if (showResult) {\n        return <Result answers={answers} questions={questions} onReset={handleReset} />;\n    }\n\n    if (!questions.length) return <div>No questions available.</div>;\n\n    const currentQuestion = questions[currentQuestionIndex];\n\n    return (\n        <div className=\"page-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/panjshir.jpg)` }} >\n\n            <div className=\"quiz-container\" >\n\n                Question {currentQuestionIndex + 1}/{questions.length}\n                <div className=\"question-text\">{currentQuestion.questionText}</div>\n            </div>\n\n            <div className=\"options-container\">\n                {currentQuestion.options.map((option, index) => (\n                    <button key={index} \n                        onClick={() => handleOptionSelect(option)} \n                        className={`option ${answers[currentQuestionIndex] === option ? 'selected' : ''}`}>\n                        {option}\n                    </button>\n                ))}\n            </div>\n\n\n\n            <div className=\"navigation-buttons\">\n                <button  onClick={handleNextQuestion}>Next</button>\n                <button  onClick={handleReset}>Reset</button>\n            </div>\n        </div>\n    );\n};\n\nexport default QuizContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}