{"ast":null,"code":"import React,{useState}from'react';import'./LoginPage.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const LoginPage=_ref=>{let{onLoginSuccess}=_ref;const[email,setEmail]=useState('');const[password,setPassword]=useState('');const[error,setError]=useState('');const handleSubmit=e=>{e.preventDefault();// Simple email and password validation\nif(!email||!password){setError('Email and password are required');return;}if(!/\\S+@\\S+\\.\\S+/.test(email)){setError('Invalid email format');return;}setError('');onLoginSuccess();// Assuming this will update the app state to show the main page\n};return/*#__PURE__*/_jsx(\"div\",{className:\"login-container\",style:{backgroundImage:\"url('/huskyLoginBackground.jpeg')\"},children:/*#__PURE__*/_jsxs(\"div\",{className:\"login-form\",children:[/*#__PURE__*/_jsx(\"img\",{src:\"/huskyLogin.jpeg\",alt:\"Husky Logo\",className:\"husky-logo\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"email\",children:\"Email\"}),/*#__PURE__*/_jsx(\"input\",{type:\"email\",id:\"email\",value:email,onChange:e=>setEmail(e.target.value),placeholder:\"Enter your email\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"input-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"password\",children:\"Password\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",id:\"password\",value:password,onChange:e=>setPassword(e.target.value),placeholder:\"Enter your password\"})]}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"login-button\",children:\"Login\"}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error\",children:error})]})]})});};export default LoginPage;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","LoginPage","_ref","onLoginSuccess","email","setEmail","password","setPassword","error","setError","handleSubmit","e","preventDefault","test","className","style","backgroundImage","children","src","alt","onSubmit","htmlFor","type","id","value","onChange","target","placeholder"],"sources":["/home/ttt21001/cse2102/Final Project/src/components/login/LoginPage.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './LoginPage.css';\n\nconst LoginPage = ({ onLoginSuccess }) => {\n    const [email, setEmail] = useState('');\n    const [password, setPassword] = useState('');\n    const [error, setError] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Simple email and password validation\n        if (!email || !password) {\n            setError('Email and password are required');\n            return;\n        }\n        if (!/\\S+@\\S+\\.\\S+/.test(email)) {\n            setError('Invalid email format');\n            return;\n        }\n        setError('');\n        onLoginSuccess(); // Assuming this will update the app state to show the main page\n    };\n\n    return (\n        <div className=\"login-container\" style={{ backgroundImage: `url('/huskyLoginBackground.jpeg')` }}>\n            <div className=\"login-form\">\n                <img src=\"/huskyLogin.jpeg\" alt=\"Husky Logo\" className=\"husky-logo\"/>\n                <form onSubmit={handleSubmit}>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" value={email} onChange={(e) => setEmail(e.target.value)} placeholder=\"Enter your email\" />\n                    </div>\n                    <div className=\"input-group\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} placeholder=\"Enter your password\" />\n                    </div>\n                    <button type=\"submit\" className=\"login-button\">Login</button>\n                    {error && <p className=\"error\">{error}</p>}\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginPage;\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,MAAO,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,gCAAAC,IAAA,IAAAC,KAAA,yBAEzB,KAAM,CAAAC,SAAS,CAAGC,IAAA,EAAwB,IAAvB,CAAEC,cAAe,CAAC,CAAAD,IAAA,CACjC,KAAM,CAACE,KAAK,CAAEC,QAAQ,CAAC,CAAGT,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAACU,QAAQ,CAAEC,WAAW,CAAC,CAAGX,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACY,KAAK,CAAEC,QAAQ,CAAC,CAAGb,QAAQ,CAAC,EAAE,CAAC,CAEtC,KAAM,CAAAc,YAAY,CAAIC,CAAC,EAAK,CACxBA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClB;AACA,GAAI,CAACR,KAAK,EAAI,CAACE,QAAQ,CAAE,CACrBG,QAAQ,CAAC,iCAAiC,CAAC,CAC3C,OACJ,CACA,GAAI,CAAC,cAAc,CAACI,IAAI,CAACT,KAAK,CAAC,CAAE,CAC7BK,QAAQ,CAAC,sBAAsB,CAAC,CAChC,OACJ,CACAA,QAAQ,CAAC,EAAE,CAAC,CACZN,cAAc,CAAC,CAAC,CAAE;AACtB,CAAC,CAED,mBACIL,IAAA,QAAKgB,SAAS,CAAC,iBAAiB,CAACC,KAAK,CAAE,CAAEC,eAAe,oCAAsC,CAAE,CAAAC,QAAA,cAC7FjB,KAAA,QAAKc,SAAS,CAAC,YAAY,CAAAG,QAAA,eACvBnB,IAAA,QAAKoB,GAAG,CAAC,kBAAkB,CAACC,GAAG,CAAC,YAAY,CAACL,SAAS,CAAC,YAAY,CAAC,CAAC,cACrEd,KAAA,SAAMoB,QAAQ,CAAEV,YAAa,CAAAO,QAAA,eACzBjB,KAAA,QAAKc,SAAS,CAAC,aAAa,CAAAG,QAAA,eACxBnB,IAAA,UAAOuB,OAAO,CAAC,OAAO,CAAAJ,QAAA,CAAC,OAAK,CAAO,CAAC,cACpCnB,IAAA,UAAOwB,IAAI,CAAC,OAAO,CAACC,EAAE,CAAC,OAAO,CAACC,KAAK,CAAEpB,KAAM,CAACqB,QAAQ,CAAGd,CAAC,EAAKN,QAAQ,CAACM,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,kBAAkB,CAAE,CAAC,EACxH,CAAC,cACN3B,KAAA,QAAKc,SAAS,CAAC,aAAa,CAAAG,QAAA,eACxBnB,IAAA,UAAOuB,OAAO,CAAC,UAAU,CAAAJ,QAAA,CAAC,UAAQ,CAAO,CAAC,cAC1CnB,IAAA,UAAOwB,IAAI,CAAC,UAAU,CAACC,EAAE,CAAC,UAAU,CAACC,KAAK,CAAElB,QAAS,CAACmB,QAAQ,CAAGd,CAAC,EAAKJ,WAAW,CAACI,CAAC,CAACe,MAAM,CAACF,KAAK,CAAE,CAACG,WAAW,CAAC,qBAAqB,CAAE,CAAC,EACvI,CAAC,cACN7B,IAAA,WAAQwB,IAAI,CAAC,QAAQ,CAACR,SAAS,CAAC,cAAc,CAAAG,QAAA,CAAC,OAAK,CAAQ,CAAC,CAC5DT,KAAK,eAAIV,IAAA,MAAGgB,SAAS,CAAC,OAAO,CAAAG,QAAA,CAAET,KAAK,CAAI,CAAC,EACxC,CAAC,EACN,CAAC,CACL,CAAC,CAEd,CAAC,CAED,cAAe,CAAAP,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}