{"ast":null,"code":"/*import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginPage from './components/login/LoginPage';\nimport MainPage from './components/main/MainPage';\nimport TopicSelection from './components/main/TopicSelection';\nimport QuizContainer from './components/quiz/QuizContainer';\n\n\nimport getQuestionsForTopic from './components/quiz/Question';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [selectedTopic, setSelectedTopic] = useState(null);\n    const [questions, setQuestions] = useState([]);\n\n    const handleLoginSuccess = () => {\n        setIsLoggedIn(true);\n    };\n\n    const handleStartQuiz = () => {\n        setSelectedTopic(null);\n    };\n\n    const handleSelectTopic = (topic) => {\n        setSelectedTopic(topic);\n        setQuestions(getQuestionsForTopic(topic));\n    };\n\n    return (\n        <Router>\n            {isLoggedIn} \n            <Routes>\n                <Route path=\"/login\" element={!isLoggedIn ? <LoginPage onLoginSuccess={handleLoginSuccess} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/main\" element={isLoggedIn ? <MainPage onStartQuiz={handleStartQuiz} onContact={() => {}} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/topic-selection\" element={isLoggedIn ? <TopicSelection onSelectTopic={handleSelectTopic} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} questions={questions} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\n\n            </Routes>\n            {isLoggedIn}\n        </Router>\n    );\n};\n\n\nexport default App;*/","map":{"version":3,"names":[],"sources":["C:/Users/nini5/cse2102finalproject/final/src/App.js"],"sourcesContent":["/*import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginPage from './components/login/LoginPage';\nimport MainPage from './components/main/MainPage';\nimport TopicSelection from './components/main/TopicSelection';\nimport QuizContainer from './components/quiz/QuizContainer';\n\n\nimport getQuestionsForTopic from './components/quiz/Question';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [selectedTopic, setSelectedTopic] = useState(null);\n    const [questions, setQuestions] = useState([]);\n\n    const handleLoginSuccess = () => {\n        setIsLoggedIn(true);\n    };\n\n    const handleStartQuiz = () => {\n        setSelectedTopic(null);\n    };\n\n    const handleSelectTopic = (topic) => {\n        setSelectedTopic(topic);\n        setQuestions(getQuestionsForTopic(topic));\n    };\n\n    return (\n        <Router>\n            {isLoggedIn} \n            <Routes>\n                <Route path=\"/login\" element={!isLoggedIn ? <LoginPage onLoginSuccess={handleLoginSuccess} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/main\" element={isLoggedIn ? <MainPage onStartQuiz={handleStartQuiz} onContact={() => {}} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/topic-selection\" element={isLoggedIn ? <TopicSelection onSelectTopic={handleSelectTopic} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} questions={questions} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\n\n            </Routes>\n            {isLoggedIn}\n        </Router>\n    );\n};\n\n\nexport default App;*/\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}