{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nini5\\\\cse2102finalproject\\\\final\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport TopicSelection from './TopicSelection';\nimport QuizContainer from './QuizContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [selectedTopic, setSelectedTopic] = useState(null);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TopicSelection, {\n          onSelectTopic: setSelectedTopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/quiz\",\n        element: /*#__PURE__*/_jsxDEV(QuizContainer, {\n          topic: selectedTopic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 30\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(App, \"HoUpVK9/BsKL+8OvaequZp7ANK0=\");\n_c = App;\nexport default App;\n\n/*import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginPage from './components/login/LoginPage';\nimport MainPage from './components/main/MainPage';\nimport TopicSelection from './components/main/TopicSelection';\nimport QuizContainer from './components/quiz/QuizContainer';\n\n\nimport getQuestionsForTopic from './components/quiz/Question';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [selectedTopic, setSelectedTopic] = useState(null);\n    const [questions, setQuestions] = useState([]);\n\n    const handleLoginSuccess = () => {\n        setIsLoggedIn(true);\n    };\n\n    const handleStartQuiz = () => {\n        setSelectedTopic(null);\n    };\n\n    const handleSelectTopic = (topic) => {\n        setSelectedTopic(topic);\n        setQuestions(getQuestionsForTopic(topic));\n    };\n\n    return (\n        <Router>\n            {isLoggedIn} \n            <Routes>\n                <Route path=\"/login\" element={!isLoggedIn ? <LoginPage onLoginSuccess={handleLoginSuccess} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/main\" element={isLoggedIn ? <MainPage onStartQuiz={handleStartQuiz} onContact={() => {}} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/topic-selection\" element={isLoggedIn ? <TopicSelection onSelectTopic={handleSelectTopic} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} questions={questions} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\n\n            </Routes>\n            {isLoggedIn}\n        </Router>\n    );\n};\n\n\nexport default App;*/\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","BrowserRouter","Router","Routes","Route","TopicSelection","QuizContainer","jsxDEV","_jsxDEV","App","_s","selectedTopic","setSelectedTopic","children","path","element","onSelectTopic","fileName","_jsxFileName","lineNumber","columnNumber","topic","_c","$RefreshReg$"],"sources":["C:/Users/nini5/cse2102finalproject/final/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport TopicSelection from './TopicSelection';\nimport QuizContainer from './QuizContainer';\n\nconst App = () => {\n    const [selectedTopic, setSelectedTopic] = useState(null);\n\n    return (\n        <Router>\n            <Routes>\n                <Route\n                    path=\"/\"\n                    element={<TopicSelection onSelectTopic={setSelectedTopic} />}\n                />\n                <Route\n                    path=\"/quiz\"\n                    element={<QuizContainer topic={selectedTopic} />}\n                />\n            </Routes>\n        </Router>\n    );\n};\n\nexport default App;\n\n\n/*import React, { useState } from 'react';\nimport { BrowserRouter as Router, Route, Routes, Navigate } from 'react-router-dom';\nimport LoginPage from './components/login/LoginPage';\nimport MainPage from './components/main/MainPage';\nimport TopicSelection from './components/main/TopicSelection';\nimport QuizContainer from './components/quiz/QuizContainer';\n\n\nimport getQuestionsForTopic from './components/quiz/Question';\n\nconst App = () => {\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n    const [selectedTopic, setSelectedTopic] = useState(null);\n    const [questions, setQuestions] = useState([]);\n\n    const handleLoginSuccess = () => {\n        setIsLoggedIn(true);\n    };\n\n    const handleStartQuiz = () => {\n        setSelectedTopic(null);\n    };\n\n    const handleSelectTopic = (topic) => {\n        setSelectedTopic(topic);\n        setQuestions(getQuestionsForTopic(topic));\n    };\n\n    return (\n        <Router>\n            {isLoggedIn} \n            <Routes>\n                <Route path=\"/login\" element={!isLoggedIn ? <LoginPage onLoginSuccess={handleLoginSuccess} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/main\" element={isLoggedIn ? <MainPage onStartQuiz={handleStartQuiz} onContact={() => {}} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/topic-selection\" element={isLoggedIn ? <TopicSelection onSelectTopic={handleSelectTopic} /> : <Navigate replace to=\"/login\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/quiz\" element={isLoggedIn && selectedTopic ? <QuizContainer topic={selectedTopic} questions={questions} /> : <Navigate replace to=\"/main\" />} />\n                <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\n\n            </Routes>\n            {isLoggedIn}\n        </Router>\n    );\n};\n\n\nexport default App;*/\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AACzE,OAAOC,cAAc,MAAM,kBAAkB;AAC7C,OAAOC,aAAa,MAAM,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACd,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAExD,oBACIQ,OAAA,CAACN,MAAM;IAAAW,QAAA,eACHL,OAAA,CAACL,MAAM;MAAAU,QAAA,gBACHL,OAAA,CAACJ,KAAK;QACFU,IAAI,EAAC,GAAG;QACRC,OAAO,eAAEP,OAAA,CAACH,cAAc;UAACW,aAAa,EAAEJ;QAAiB;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC,eACFZ,OAAA,CAACJ,KAAK;QACFU,IAAI,EAAC,OAAO;QACZC,OAAO,eAAEP,OAAA,CAACF,aAAa;UAACe,KAAK,EAAEV;QAAc;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEjB,CAAC;AAACV,EAAA,CAjBID,GAAG;AAAAa,EAAA,GAAHb,GAAG;AAmBT,eAAeA,GAAG;;AAGlB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA9CA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}