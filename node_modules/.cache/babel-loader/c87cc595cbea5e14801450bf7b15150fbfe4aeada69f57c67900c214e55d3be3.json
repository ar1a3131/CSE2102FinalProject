{"ast":null,"code":"import React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import getQuestionsForTopic from'./Question';import Result from'./Result';import'./QuizStyle.css';// Make sure this file has the necessary styles\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const QuizContainer=_ref=>{let{topic}=_ref;const[currentQuestionIndex,setCurrentQuestionIndex]=useState(0);const[answers,setAnswers]=useState(Array(5).fill(null));const[showResult,setShowResult]=useState(false);const questions=getQuestionsForTopic(topic);const navigate=useNavigate();const[timeLeft,setTimeLeft]=useState(30);useEffect(()=>{let timer;if(!showResult&&timeLeft>0){timer=setTimeout(()=>setTimeLeft(timeLeft-1),1000);}else if(timeLeft===0){// Auto navigate to the next question or show results\nif(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);setTimeLeft(30);// Reset the timer for the next question\n}else{setShowResult(true);// No more questions left, show the result\n}}return()=>clearTimeout(timer);},[timeLeft,currentQuestionIndex,questions.length,showResult]);const handleOptionSelect=option=>{const newAnswers=[...answers];newAnswers[currentQuestionIndex]=option;setAnswers(newAnswers);};const handleReset=()=>{setAnswers(Array(5).fill(null));setCurrentQuestionIndex(0);setShowResult(false);setTimeLeft(30);// Reset the timer\nnavigate('/topic-selection');};const handleNextQuestion=()=>{if(currentQuestionIndex<questions.length-1){setCurrentQuestionIndex(currentQuestionIndex+1);setTimeLeft(30);// Reset the timer for the next question\n}else{setShowResult(true);// No more questions left, show the result\n}};if(showResult){return/*#__PURE__*/_jsx(Result,{answers:answers,questions:questions,onReset:handleReset});}if(!questions.length)return/*#__PURE__*/_jsx(\"div\",{children:\"No questions available.\"});const currentQuestion=questions[currentQuestionIndex];return/*#__PURE__*/_jsxs(\"div\",{className:\"page-container\",style:{backgroundImage:\"url(\".concat(process.env.PUBLIC_URL,\"/quizBack.jpg)\")},children:[/*#__PURE__*/_jsxs(\"div\",{className:\"quiz-container\",children:[\"Question \",currentQuestionIndex+1,\"/\",questions.length,/*#__PURE__*/_jsx(\"div\",{className:\"question-text\",children:currentQuestion.questionText})]}),/*#__PURE__*/_jsx(\"div\",{className:\"options-container\",children:currentQuestion.options.map((option,index)=>/*#__PURE__*/_jsx(\"button\",{onClick:()=>handleOptionSelect(option),className:\"option \".concat(answers[currentQuestionIndex]===option?'selected':''),children:option},index))}),/*#__PURE__*/_jsxs(\"div\",{className:\"timer\",children:[\"Time left: \",timeLeft,\" seconds\"]}),/*#__PURE__*/_jsxs(\"div\",{className:\"navigation-buttons\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleNextQuestion,children:\"Next\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleReset,children:\"Reset\"})]})]});};export default QuizContainer;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","getQuestionsForTopic","Result","jsx","_jsx","jsxs","_jsxs","QuizContainer","_ref","topic","currentQuestionIndex","setCurrentQuestionIndex","answers","setAnswers","Array","fill","showResult","setShowResult","questions","navigate","timeLeft","setTimeLeft","timer","setTimeout","length","clearTimeout","handleOptionSelect","option","newAnswers","handleReset","handleNextQuestion","onReset","children","currentQuestion","className","style","backgroundImage","concat","process","env","PUBLIC_URL","questionText","options","map","index","onClick"],"sources":["/home/ttt21001/cse2102/Final Project/src/components/quiz/QuizContainer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nimport getQuestionsForTopic from './Question';\nimport Result from './Result';\n\nimport './QuizStyle.css'; // Make sure this file has the necessary styles\n\nconst QuizContainer = ({ topic }) => {\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n    const [answers, setAnswers] = useState(Array(5).fill(null));\n    const [showResult, setShowResult] = useState(false);\n    const questions = getQuestionsForTopic(topic);\n    const navigate = useNavigate();\n    const [timeLeft, setTimeLeft] = useState(30);\n\n    useEffect(() => {\n        let timer;\n        if (!showResult && timeLeft > 0) {\n            timer = setTimeout(() => setTimeLeft(timeLeft - 1), 1000);\n        } else if (timeLeft === 0) {\n            // Auto navigate to the next question or show results\n            if (currentQuestionIndex < questions.length - 1) {\n                setCurrentQuestionIndex(currentQuestionIndex + 1);\n                setTimeLeft(30); // Reset the timer for the next question\n            } else {\n                setShowResult(true); // No more questions left, show the result\n            }\n        }\n        return () => clearTimeout(timer);\n    }, [timeLeft, currentQuestionIndex, questions.length, showResult]);\n\n    const handleOptionSelect = (option) => {\n        const newAnswers = [...answers];\n        newAnswers[currentQuestionIndex] = option;\n        setAnswers(newAnswers);\n    };\n\n    const handleReset = () => {\n        setAnswers(Array(5).fill(null));\n        setCurrentQuestionIndex(0);\n        setShowResult(false);\n        setTimeLeft(30); // Reset the timer\n        navigate('/topic-selection');\n    };\n\n    const handleNextQuestion = () => {\n        if (currentQuestionIndex < questions.length - 1) {\n            setCurrentQuestionIndex(currentQuestionIndex + 1);\n            setTimeLeft(30); // Reset the timer for the next question\n        } else {\n            setShowResult(true); // No more questions left, show the result\n        }\n    };\n\n    if (showResult) {\n        return <Result answers={answers} questions={questions} onReset={handleReset} />;\n    }\n\n    if (!questions.length) return <div>No questions available.</div>;\n\n    const currentQuestion = questions[currentQuestionIndex];\n\n    return (\n        <div className=\"page-container\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/quizBack.jpg)` }} >\n\n            <div className=\"quiz-container\" >\n\n                Question {currentQuestionIndex + 1}/{questions.length}\n                <div className=\"question-text\">{currentQuestion.questionText}</div>\n            </div>\n\n            <div className=\"options-container\">\n                {currentQuestion.options.map((option, index) => (\n                    <button key={index} \n                        onClick={() => handleOptionSelect(option)} \n                        className={`option ${answers[currentQuestionIndex] === option ? 'selected' : ''}`}>\n                        {option}\n                    </button>\n                ))}\n            </div>\n\n            <div className=\"timer\">Time left: {timeLeft} seconds</div>\n\n            <div className=\"navigation-buttons\">\n                <button  onClick={handleNextQuestion}>Next</button>\n                <button  onClick={handleReset}>Reset</button>\n            </div>\n        </div>\n    );\n};\n\nexport default QuizContainer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}